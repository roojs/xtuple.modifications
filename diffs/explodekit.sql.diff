--- original/explodekit.sql	2012-05-11 14:20:17.000000000 +0800
+++ explodekit.sql	2012-05-11 14:50:00.000000000 +0800
@@ -1,37 +1,76 @@
 
-CREATE OR REPLACE FUNCTION explodeKit(INTEGER, INTEGER, INTEGER, INTEGER, NUMERIC) RETURNS INTEGER AS $$
--- Copyright (c) 1999-2012 by OpenMFG LLC, d/b/a xTuple. 
--- See www.xtuple.com/CPAL for the full text of the software license.
-DECLARE
-  pSoheadid ALIAS FOR $1;
-  pLinenumber ALIAS FOR $2;
-  pSubnumber ALIAS FOR $3;
-  pItemsiteid ALIAS FOR $4;
-  pQty ALIAS FOR $5;
-BEGIN
-  RETURN explodeKit(pSoheadid, pLinenumber, pSubnumber, pItemsiteid, pQty, CURRENT_DATE, NULL);
-END;
-$$ LANGUAGE 'plpgsql';
 
-CREATE OR REPLACE FUNCTION explodeKit(INTEGER, INTEGER, INTEGER, INTEGER, NUMERIC, DATE, DATE) RETURNS INTEGER AS $$
--- Copyright (c) 1999-2012 by OpenMFG LLC, d/b/a xTuple. 
--- See www.xtuple.com/CPAL for the full text of the software license.
+
+
+CREATE OR REPLACE FUNCTION explodekitmustdelete(integer, integer, integer, integer)
+ RETURNS integer AS
+$BODY$
 DECLARE
   pSoheadid ALIAS FOR $1;
   pLinenumber ALIAS FOR $2;
   pSubnumber ALIAS FOR $3;
   pItemsiteid ALIAS FOR $4;
-  pQty ALIAS FOR $5;
-  pScheddate ALIAS FOR $6;
-  pPromdate ALIAS FOR $7;
+  _warehousid INTEGER;
+  _itemid INTEGER;
+  _revid INTEGER;
+
+  _ret INTEGER;
+  
 BEGIN
-  RETURN explodeKit(pSoheadid, pLinenumber, pSubnumber, pItemsiteid, pQty, CURRENT_DATE, NULL, '');
+    
+  SELECT getActiveRevId('BOM',itemsite_item_id), itemsite_warehous_id, itemsite_item_id
+    INTO _revid, _warehousid, _itemid
+    FROM itemsite
+   WHERE(itemsite_id=pItemsiteid);
+  IF(NOT FOUND) THEN
+    RAISE EXCEPTION 'No Item Site for the specified line was found.';
+  END IF;
+    
+    SELECT count(itemsite_id) INTO _ret
+  
+        FROM bomitem JOIN item ON (item_id=bomitem_item_id)
+             LEFT OUTER JOIN itemsite ON ((itemsite_item_id=item_id) AND (itemsite_warehous_id=_warehousid))
+        WHERE((bomitem_parent_item_id=_itemid)
+            AND (bomitem_rev_id=_revid)
+            AND (CURRENT_DATE BETWEEN bomitem_effective AND (bomitem_expires - 1)))
+            AND  itemsite_createsopr = true 
+            AND itemsite_createsopo = true 
+            AND itemsite_createwo = true;
+             
+    if (_ret > 0) THEN
+        RETURN _ret;
+    END IF;
+    
+    SELECT count(coitem_id) INTO _ret
+        FROM
+            coitem
+        WHERE
+            coitem_cohead_id = pSoheadid
+            AND 
+            coitem_linenumber = pLinenumber
+            AND 
+            coitem_subnumber > 0
+            AND
+            coitem_order_type IS NOT NULL
+        LIMIT 1;
+    
+    RETURN _ret;
+    
 END;
-$$ LANGUAGE 'plpgsql';
+$BODY$
+  LANGUAGE plpgsql VOLATILE
+  COST 100;
+ALTER FUNCTION explodekitmustdelete(integer, integer, integer, integer)
+  OWNER TO admin;
 
-CREATE OR REPLACE FUNCTION explodeKit(INTEGER, INTEGER, INTEGER, INTEGER, NUMERIC, DATE, DATE, TEXT) RETURNS INTEGER AS $$
--- Copyright (c) 1999-2012 by OpenMFG LLC, d/b/a xTuple. 
--- See www.xtuple.com/CPAL for the full text of the software license.
+
+-- Function: explodekit(integer, integer, integer, integer, numeric, date, date, text)
+
+-- DROP FUNCTION explodekit(integer, integer, integer, integer, numeric, date, date, text);
+
+CREATE OR REPLACE FUNCTION explodekit(integer, integer, integer, integer, numeric, date, date, text)
+  RETURNS integer AS
+$BODY$
 DECLARE
   pSoheadid ALIAS FOR $1;
   pLinenumber ALIAS FOR $2;
@@ -51,6 +90,7 @@
   _count INTEGER;
   _orderid INTEGER := 0;
   _itemsrcid INTEGER;
+  _hascreates INTEGER;
 BEGIN
 
   SELECT getActiveRevId('BOM',itemsite_item_id), itemsite_warehous_id, itemsite_item_id
@@ -61,6 +101,12 @@
     RAISE EXCEPTION 'No Item Site for the specified line was found.';
   END IF;
 
+-- if any of the items have    itemsite_createsopr or itemsite_createsopo
+-- then we have to trash all the items before starting..
+  
+    
+     
+
   FOR _item IN
   SELECT bomitem_id, 
          itemsite_id,
@@ -80,11 +126,15 @@
      AND (bomitem_rev_id=_revid)
      AND (CURRENT_DATE BETWEEN bomitem_effective AND (bomitem_expires - 1)))
    ORDER BY bomitem_seqnumber LOOP
+   
     IF (NOT _item.active) THEN
       RAISE EXCEPTION 'One or more of the components for the kit is inactive for the selected item site.';
     ELSIF (NOT _item.sold) THEN
       RAISE EXCEPTION 'One or more of the components for the kit is not sold for the selected item site.';
     ELSIF (_item.item_type='F') THEN
+      -- not sure what this does?? F=???
+      
+    
       SELECT explodeKit(pSoheadid, pLinenumber, _subnumber, _item.itemsite_id, _item.qty)
         INTO _subnumber;
     ELSE
@@ -98,6 +148,20 @@
         _type := NULL;
       END IF;
       _subnumber := _subnumber + 1;
+      
+      -- IF THE LINE EXISTS.. then update. it..
+      
+      SELECT coitem_id FROM coitem INTO _coitemid WHERE 
+        coitem_cohead_id = pSoheadid
+        AND 
+        coitem_linenumber = pLinenumber
+        AND 
+        coitem_subnumber = _subnumber
+        LIMIT 1;
+     
+      IF (NOT FOUND) THEN 
+      
+        
       _coitemid = nextval('coitem_coitem_id_seq');
       raise notice 'coitem id: %',_coitemid;
       INSERT INTO coitem
@@ -123,6 +187,38 @@
              _type, -1,
              '', pMemo,
              0);
+     ELSE
+        IF (_type IS NOT NULL) THEN
+        
+            RAISE EXCEPTION 'can not update coitems - use explodekitcanupdate to check first';
+        END IF;
+      
+        UPDATE coitem SET
+       
+               coitem_itemsite_id = _item.itemsite_id    , 
+               coitem_status =   'O', 
+               coitem_scheddate =  pScheddate  ,
+               coitem_promdate =   pPromdate ,
+               coitem_qtyord = _item.qty   ,
+               coitem_qty_uom_id =  _item.bomitem_uom_id   ,
+               coitem_qty_invuomratio =   _item.invuomratio  ,
+               coitem_qtyshipped =  0  ,
+               coitem_qtyreturned = 0   ,
+               coitem_unitcost = stdCost(_item.item_id)   ,
+               coitem_custprice = 0   ,
+               coitem_price =  0 ,
+               coitem_price_uom_id =   _item.item_price_uom_id   ,
+               coitem_price_invuomratio =   1 ,
+               coitem_order_type =  _type  ,
+               coitem_order_id =  -1  ,
+               coitem_custpn =   '' ,
+               coitem_memo =  pMemo  ,
+               coitem_prcost = 0
+               
+         WHERE coitem_id = _coitemid;
+      
+      END IF;
+       
 
       IF (_item.itemsite_createsopr) THEN
         SELECT createPR(cohead_number::INTEGER, 'S', _coitemid) INTO _orderid
@@ -155,5 +251,12 @@
 
   RETURN _subnumber;
 END;
-$$ LANGUAGE 'plpgsql';
+$BODY$
+  LANGUAGE plpgsql VOLATILE
+  COST 100;
+ALTER FUNCTION explodekit(integer, integer, integer, integer, numeric, date, date, text)
+  OWNER TO admin;
+
+
+
 
